<?xml version="1.0"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:include schemaLocation="Response.xsd"/>
    <xs:include schemaLocation="Escalation.xsd"/>
    <xs:include schemaLocation="Resource.xsd"/>

    <!-- Since conditions must be ordered and inheritence does not work so
         well in JAXB we must define all options -->
    <xs:complexType name="AlertCondition">
        <!-- All conditions -->
        <xs:attribute name="required"            type="xs:boolean" use="required"/>
        <xs:attribute name="type"                type="xs:int"     use="required"/> 
        <!-- CProp change conditions -->
        <xs:attribute name="property"            type="xs:string"  use="optional"/>
        <!-- Log conditions -->
        <xs:attribute name="logLevel"            type="xs:string"  use="optional"/>
        <xs:attribute name="logMatches"          type="xs:string"  use="optional"/>
        <!-- Recovery conditions -->
        <xs:attribute name="recover"             type="xs:string"  use="optional"/>
        <!-- Metric change condition -->
        <xs:attribute name="metricChange"        type="xs:string"  use="optional"/>
        <!-- Baseline condition -->
        <xs:attribute name="baselineMetric"      type="xs:string"  use="optional"/>
        <xs:attribute name="baselineComparator"  type="xs:string"  use="optional"/>
        <xs:attribute name="baselinePercentage"  type="xs:double"  use="optional"/>
        <xs:attribute name="baselineType"        type="xs:string"  use="optional"/>
        <!-- Metric threshold -->
        <xs:attribute name="thresholdMetric"     type="xs:string"  use="optional"/>
        <xs:attribute name="thresholdComparator" type="xs:string"  use="optional"/>
        <xs:attribute name="thresholdValue"      type="xs:double"  use="optional"/>
        <!-- Config change -->
        <xs:attribute name="configMatch"         type="xs:string"  use="optional"/>
        <!-- Control command -->
        <xs:attribute name="controlAction"       type="xs:string"  use="optional"/>
        <xs:attribute name="controlStatus"       type="xs:string" use="optional"/> 
    </xs:complexType>

    <xs:complexType name="AlertDefinition">
        <xs:sequence>
            <xs:element name="Resource" type="Resource" maxOccurs="1"/>
            <xs:element name="ResourcePrototype" type="ResourcePrototype" maxOccurs="1"/>
            <xs:element name="Escalation" type="Escalation" maxOccurs="1"/>
            <!-- The ordering of this this is important -->
            <xs:element name="AlertCondition" type="AlertCondition" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id"          type="xs:int"         use="optional" />
        <xs:attribute name="name"        type="xs:string"      use="required" />
        <xs:attribute name="description" type="xs:string"      use="required" />
        <xs:attribute name="parent"      type="xs:int"         use="optional" />
        <xs:attribute name="priority"    type="xs:int"         use="required" />
        <xs:attribute name="active"      type="xs:boolean"     use="required" />
        <xs:attribute name="frequency"   type="xs:int"         use="required" />
        <xs:attribute name="count"       type="xs:int"         use="required" />
        <xs:attribute name="range"       type="xs:int"         use="required" />
        <xs:attribute name="willRecover" type="xs:boolean"     use="required" />
        <xs:attribute name="notifyFiltered"  type="xs:boolean" use="required" />
        <xs:attribute name="controlFiltered" type="xs:boolean" use="required" />
    </xs:complexType>

    <xs:element name="AlertDefinitionResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Response">
                    <xs:sequence>
                        <xs:element name="AlertDefinition" type="AlertDefinition" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AlertDefinitionsResponse">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Response">
                    <xs:sequence>
                        <xs:element name="AlertDefinition" type="AlertDefinition" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="AlertDefinitionRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="AlertDefinition" maxOccurs="1" type="AlertDefinition"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="AlertDefinitionsRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="AlertDefinition" maxOccurs="unbounded" type="AlertDefinition"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xs:schema>